networks:
  # 42nice:
  #   driver: bridge
  monitoring:
    driver: bridge
  # elk:
  #   driver: bridge
  
# volumes:
#   prometheus_data:
#     driver: local
#     driver_opts:
#       type: none
#       device: data/monitoring/prometheus_data
#       o: bind

services:
  grafana:
    build: requirements/grafana
    container_name: "monitoring_grafana"
    restart: unless-stopped
    user: "1000"
    networks:
      - monitoring
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GRAFANA_USER_NAME=${GRAFANA_USER_NAME}
      - GRAFANA_USER_PASSWORD=${GRAFANA_USER_PASSWORD}
  prometheus:
    build: requirements/prometheus
    container_name: "monitoring_prometheus"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - node-exporter
      - cadvisor
      - alertmanager
  alertmanager:
    build: requirements/alertmanager
    container_name: "monitoring_alertmanager"
    restart: unless-stopped
    networks:
      - monitoring
    environment:
      - DISCORD_WEBHOOK_URL="${DISCORD_WEBHOOK_URL}"
  node-exporter:
    build: requirements/node-exporter
    container_name: "monitoring_node-exporter"
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    networks:
      - monitoring
  cadvisor:
    build: requirements/cadvisor
    container_name: "monitoring_cadvisor"
    restart: unless-stopped
    privileged: true
    command:
      - '-housekeeping_interval=15s'
      - '-docker_only=true'
      - '-store_container_labels=false'
    devices:
      - /dev/kmsg
    networks:
      - monitoring
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro